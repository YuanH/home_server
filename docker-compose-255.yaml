services:
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    # network_mode: 'bridge'
    # user: ${UID}:${GID}
    # user: 501:20
    volumes:
      # This directory will store Jellyfin config and metadata
      - ./config/jellyfin:/config
      - ./cache:/cache
      - ${COMMON_PATH}/qbittorrent/downloads:/data/media_downloads
      - type: bind
        source: /Volumes/ExtremePro/Movies
        target: /media/movies
      - type: bind
        source: /Volumes/ExtremePro/TV
        target: /media/tv
      - type: bind
        source: /Volumes/ExtremePro/RAM
        target: /media/ram
      - type: bind
        source: /Volumes/ExtremePro/Chinese_Movies
        target: /media/chinese_movies
      - type: bind
        source: /Volumes/ExtremePro/Chinese_TV
        target: /media/chinese_tv
      - type: bind
        source: /Users/yuan/Development/kindle/Kindle_download_helper
        target: /media/books
    environment:
      - TZ=America/New_York
      - JELLYFIN_PublishedServerUrl=https://a5luan.org
      - PUID=0
      - PGID=0

    ports:
      - "8096:8096"
      - "8920:8920"

  # caddy:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: caddy
  #   restart: unless-stopped
  #   # Expose standard HTTP and HTTPS ports on the host
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     # Make sure you have a Caddyfile that uses DNS challenge with Cloudflare
  #     - ./Caddyfile:/etc/caddy/Caddyfile:ro
  #     - ./caddy_data:/data
  #     - ./caddy_config:/config
  #   environment:
  #     # Replace with your own token
  #     CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN}
  #   depends_on:
  #     - jellyfin

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare-tunnel
    command: tunnel run
    restart: unless-stopped
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - WEBUI_PORT=8080
      - PUID=0
      - PGID=0
      - TZ=${TZ}
      # - DOCKER_MODS=ghcr.io/gabe565/linuxserver-mod-vuetorrent
    volumes:
      - ${COMMON_PATH}:${COMMON_PATH}
      - ./config/qbittorrent:/config
      - ${COMMON_PATH}/qbittorrent/downloads:/downloads
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TZ}
    volumes:
      - ./config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TZ}
    volumes:
      - ${COMMON_PATH}:${COMMON_PATH}
      - ./config/sonarr:/config
      - ${COMMON_PATH}/TV:/tv
      - ${COMMON_PATH}/qbittorrent/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TZ}
    volumes:
      - ${COMMON_PATH}:${COMMON_PATH}
      - ./config/radarr:/config
      - ${COMMON_PATH}/Movies:/movies
      - ${COMMON_PATH}/qbittorrent/downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TZ}
    ports:
      - 8191:8191
    restart: unless-stopped
  
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TZ}
    volumes:
      - ./config/sabnzbd/config:/config
      - ${COMMON_PATH}:${COMMON_PATH}
      - ${COMMON_PATH}/usenet/downloads:/downloads #optional
      - ${COMMON_PATH}/usenet/incomplete:/incomplete-downloads #optional
    ports:
      - 8081:8080
    restart: unless-stopped
